// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/cilium/api/v1/models"
)

// GetMapIDEventsReader is a Reader for the GetMapIDEvents structure.
type GetMapIDEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMapIDEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMapIDEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMapIDEventsInvalid()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMapIDEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetMapIDEventsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetMapIDEventsOK creates a GetMapIDEventsOK with default headers values
func NewGetMapIDEventsOK() *GetMapIDEventsOK {
	return &GetMapIDEventsOK{}
}

/*GetMapIDEventsOK handles this case with default header values.

Success
*/
type GetMapIDEventsOK struct {
	Payload models.EndpointStatusLog
}

func (o *GetMapIDEventsOK) Error() string {
	return fmt.Sprintf("[GET /map/{id}/events][%d] getMapIdEventsOK  %+v", 200, o.Payload)
}

func (o *GetMapIDEventsOK) GetPayload() models.EndpointStatusLog {
	return o.Payload
}

func (o *GetMapIDEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMapIDEventsInvalid creates a GetMapIDEventsInvalid with default headers values
func NewGetMapIDEventsInvalid() *GetMapIDEventsInvalid {
	return &GetMapIDEventsInvalid{}
}

/*GetMapIDEventsInvalid handles this case with default header values.

Invalid identity provided
*/
type GetMapIDEventsInvalid struct {
}

func (o *GetMapIDEventsInvalid) Error() string {
	return fmt.Sprintf("[GET /map/{id}/events][%d] getMapIdEventsInvalid ", 400)
}

func (o *GetMapIDEventsInvalid) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMapIDEventsNotFound creates a GetMapIDEventsNotFound with default headers values
func NewGetMapIDEventsNotFound() *GetMapIDEventsNotFound {
	return &GetMapIDEventsNotFound{}
}

/*GetMapIDEventsNotFound handles this case with default header values.

Endpoint not found
*/
type GetMapIDEventsNotFound struct {
}

func (o *GetMapIDEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /map/{id}/events][%d] getMapIdEventsNotFound ", 404)
}

func (o *GetMapIDEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMapIDEventsTooManyRequests creates a GetMapIDEventsTooManyRequests with default headers values
func NewGetMapIDEventsTooManyRequests() *GetMapIDEventsTooManyRequests {
	return &GetMapIDEventsTooManyRequests{}
}

/*GetMapIDEventsTooManyRequests handles this case with default header values.

Rate-limiting too many requests in the given time frame
*/
type GetMapIDEventsTooManyRequests struct {
}

func (o *GetMapIDEventsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /map/{id}/events][%d] getMapIdEventsTooManyRequests ", 429)
}

func (o *GetMapIDEventsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
